# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1MopaqWhuW-IBe0pPGG6G-OphdtyXSxG7
"""

import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# 加载数据
@st.cache
def load_data():
    # 使用GitHub上的CSV文件链接或本地文件路径
    url = "https://raw.githubusercontent.com/Mhu0824/Streamlit/0cf50d29b8420dec4063fac0a9641bd68a9b28f0/movies_dataset1.csv"
    return pd.read_csv(url, encoding='ISO-8859-1')

# 数据加载
df = load_data()

# 标题
st.title("🎬 Movie Data Dashboard")

# 数据概览
st.header("Overview")
st.write("Dataset Snapshot:")
st.dataframe(df.head())

# 功能 1: 电影类型分布
st.header("Genre Distribution")

# 处理电影类型数据
genres = pd.concat([
    df['genre_1'].str.strip(), 
    df['genre_2'].str.strip(), 
    df['genre_3'].str.strip(),
    df['genre_4'].str.strip(),
    df['genre_5'].str.strip()
]).dropna()

# 计算所有类型的分布
genre_counts = genres.value_counts()

# 在 Streamlit 中显示所有类型及其数量
st.header("All Genres and Their Counts")
st.write(genre_counts)

# 获取前 15 个类型及其数量
top_15_genres = genre_counts.head(15)

# 将其余类型合并为 "Other"
other_count = genre_counts[15:].sum()

# 创建一个新的序列，将 "Other" 直接添加到前 15 个类型中
top_15_genres_with_other = pd.concat(
    [top_15_genres, pd.Series({"Other": other_count})]
)

# 显示柱状图
st.header("Top 15 Genres and 'Other'")
st.bar_chart(top_15_genres_with_other)

# 处理国家和类型映射
# 将 `country` 列拆分为独立的国家
countries = df['country'].str.split(',').explode().str.strip()

# 将每部电影的国家与所有类型关联
country_genres = pd.concat([
    countries.rename("country").reset_index(drop=True),
    pd.concat([
        df['genre_1'].str.strip(), 
        df['genre_2'].str.strip(), 
        df['genre_3'].str.strip(),
        df['genre_4'].str.strip(),
        df['genre_5'].str.strip()
    ], axis=1).stack().reset_index(drop=True).rename("genre")
], axis=1).dropna()

# 按国家和类型分组，统计每个国家的类型分布
country_genre_counts = country_genres.groupby(['country', 'genre']).size().reset_index(name='count')

# 添加 Streamlit 界面选择国家并查看其类型分布
selected_country = st.selectbox("Select a country to view its top genres:", country_genre_counts['country'].unique())

# 获取选定国家的前 10 个类型及其数量
top_genres_for_country = country_genre_counts[country_genre_counts['country'] == selected_country].nlargest(10, 'count')

# 显示选定国家的前 10 个类型
st.header(f"Top 10 Genres for {selected_country}")
st.bar_chart(data=top_genres_for_country.set_index('genre')['count'])
